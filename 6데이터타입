// 예제 06-01
//  모두 숫자 티입이다
var interger = 10; //상수
var double = 10.12; //실수
var negative = -20; // 음의 정수

// 예제 06-02

var binary = 0b1000001; //진수
var octal = 0o101; // 8진수
var hex = 0x41; // 16진수

// 표기법만 다를 뿐 모두 같은 값이다.
console.log(binary); // 65
console.log(octal); // 65
console.log(hex); // 65
console.log(binary === octal); // 65
console.log(octal === hex); //true


// 예제 06-03
// 숫자 타입은 모든 실수로 처리한다.
console.log(1 === 1.0); //true
console.log(4 / 2); // 2
console.log(3 / 2) // 1.5

//  Infinity: 양의 무한대
// -Infinity: 음의 무한대
// NaN: not-a-number

// 예제 06-04

console.log(10 / 0); //Infinity
console.log(10 / -0); //-Infinity
console.log(1 * 'string'); // NaN

// 예제 06-05 자바스크립트는 대소문자를 구별
var x = nan;

// 예제 06-06
var string;
string = '문자열'; // 작은따옴표
string = '문자열'; // 큰따옴표
string = '문자열'; // 백틱(ES6)
string = '작은따옴표로 감싼 문자열 내의 "큰따옴표"는 문자열로 인식된다.';
string = "큰따옴표로 감싼 문자열 내의 '작은따엄표'는 문자열로 인식된다.";

// 예제 06-07
// 따옴표로 감싸지 않은 hello를 식별자로 인식한다.
var string = hello; 

// 예제 06-08
var template = 'Template literal';
console.log(template);

// 예제 06-09 줄바꿈 허용xXX 일반 문자열 내에서 줄바꿈 등의 공백을 표현하라면 백슬래시(\)로 시작하는 이스케이프 시퀀시를 사용해야 한다.
var str = 'hello
world.';

// 예제 06-10
var template = "<ul>\n\t<li><a href="#">home</a></li>\n</ul>";

console.log(template);

//출력결과
//<ul>
//  <li><a href="#">home</a></li>
//</ul>

// 예제 06-11
var template = `<ul>
<li><a hreft="#">home</a></li>
</ul>`;

console.log(template);

//출력결과
//<ul>
//  <li><a href="#">home</a></li>
//</ul>

// 예제 06-12
var first = "Ung-mo";
var last = 'Lee';

console.log('My name is' + first + ' '+ last + '.');

// 예제 06-13
var first = 'Ung-mo';
var last = 'Lee';

//  ES6: 표현식 삽입
console.log(`My name is ${first} ${last}.`); // my name is Ung-mo Lee.

// 예제 06-14

console.log(`1 + 2 = ${1 + 2}`); // 1 + 2 = 3

// 예제 06-15
console.log('1 + 2 = ${1 + 2}'); // 1 + 2 = ${1+2}

// 예제 06-16 불리언 타입
var foo = true;
console.log(foo); // true

foo = false;
console.log(foo); // false


// 예제 06-17 undefined 타입
var foo;
console.log(foo); //undefined

// 예제 06-18 null 타입
var foo = 'Lee';
foo = null;

// 예제 06-19
// <!DOCTYPE html>
// <html>
//   <body>
//     <scipt>
//       var element = docuument.querySelector('.myClass');

//       // HTML 문서에 myClass 클래스를 갖는 요소가 없다면 null을 반환하다.
//       console.log(element); // null
//     </scipt>
//   </body>
// </html>

// 예제 06-20
// 심벌 값 생성
var key = Symbol('key');
console.log(typeof key); // symbol

// 객체 생성
var obj = {};

// 이름이 충돌할 위험이 없는 유일무이한 값인 심벌을 프로퍼티 키로 사용한다.
obj[key] = 'value';
console.log(obj[key]); // value

// 예제 06-21
var score = 100;

// 예제 06-22
// c 변수에는 1바이트 정수 타입의 값(-128 ~ 127)만 할당할 수 있다.
char c;

// num 변수에는 4바이트 정수 타입의 값(-2,124,483,648 ~ 2,124,483,647)만 할당할 수 있다.
int num;

// 예제 06-23
var foo;
console.log(typeof foo); // undefined

foo = 3;
console.log(typeof foo); // number

foo = 'Hello';
console.log(typeof foo); // string

foo = true;
console.log(typeof foo); // boolean

foo = null;
console.log(typeof foo); // object

foo = symbol();
console.log(typeof foo); // symbol

foo = {}; // 객체
console.log(typeof foo); // object

foo = []; // 배열
console.log(typeof foo); // object

foo = function () {}; // 함수
console.log(typeof foo); function

// 7개의 데이터 타입이 있다.
